apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-admission.fullname" . }}
  labels:
    {{- include "k8s-admission.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "k8s-admission.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- include "k8s-admission.pod.annotations" . | nindent 8 }}
      labels:
        {{- include "k8s-admission.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "k8s-admission.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with (concat .Values.podEnvs .Values.defaultEnvs) | uniq }}
          env:
              {{- toYaml . | nindent 12}}
          {{- end }}
          command: [/k8s-admission, --tls-private-key-file, /var/certs/tls.key, --tls-cert-file, /var/certs/tls.crt, --port, {{ .Values.podContainerPort | quote }} ]
          ports:
            - name: http
              containerPort: {{ .Values.podContainerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              scheme: HTTPS
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              scheme: HTTPS
              port: http
          volumeMounts:
            - mountPath: "/var/certs"
              name: certs
              readOnly: true
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: certs
          secret:
          {{- if eq .Values.certificates.exsistingSecretName ""}}
            secretName: {{ include "k8s-admission.fullname" . }}-cert
            {{ else }}
            secretName: {{ .Values.certificates.exsistingSecretName }}
          {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 10 }}
      {{- end }}
