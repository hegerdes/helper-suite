FROM debian:bookworm AS build

# Install dev deps
RUN sed -i 's|^Components: main$|Components :main non-free non-free-firmware|' /etc/apt/sources.list.d/debian.sources
RUN apt-get update -qq && apt-get install -y -qq \
    make curl git gcc build-essential pkgconf m4 libtool libsystemd-dev \
    libprotobuf-c-dev libcap-dev libseccomp-dev libyajl-dev libyajl2 \
    libprotobuf-c-dev protobuf-c-compiler protobuf-compiler libgcrypt20-dev \
    python3-protobuf go-md2man libtool autoconf python3 automake \
    golang-github-checkpoint-restore-go-criu-dev libcudart11.0

# Build Args
ARG WasmEdgeApiVersion=0.1.0
ARG CrunVersion=main

# Install wasmedge
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
# See https://wasmedge.org/book/en/quick_start/install.html
RUN curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash -s --
# RUN curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash -s -- -v 0.14.1

WORKDIR /builder
RUN git clone --branch ${CrunVersion} https://github.com/containers/crun.git
RUN source $HOME/.wasmedge/env \
    && cd crun \
    && ./autogen.sh \
    && ./configure --with-wasmedge \
    && make -j $(nproc) \
    && mkdir -p wasmlibs \
    && cp $HOME/.wasmedge/lib/libwasmedge.so.${WasmEdgeApiVersion} wasmlibs/libwasmedge.so.${WasmEdgeApiVersion} \
    && ln -s wasmlibs/libwasmedge.so.${WasmEdgeApiVersion} wasmlibs/libwasmedge.so.0 \
    && ln -s wasmlibs/libwasmedge.so.0 wasmlibs/libwasmedge.so \
    && tar czvf "crun-$(git rev-parse --short HEAD)_$(uname -m).tar.gz" crun COPYING NEWS README.md wasmlibs/* \
    && if [ "$(uname -m)" = "x86_64" ]; then ./crun --version; fi

RUN cp crun/crun*.tar.gz .

FROM debian:bookworm AS final
WORKDIR /builder
COPY --from=build /builder/crun-*.tar.gz /builder
